// A Kage port of https://www.shadertoy.com/view/lsjSRK

//kage:unit pixels
package main

const Pi = 3.14159265
const HalfPi = Pi/2

var Direction float
var Duration float
var Time float
var ScreenSize vec2

func Fragment(dst vec4, src vec2, color vec4) vec4 {
	fragColor := imageSrc0UnsafeAt(src)
	if Direction == 0 {
		return fragColor
	}

	//get grey comp of ichannel1
	secondImageGrey := imageSrc1UnsafeAt(src)
	grey := (secondImageGrey.r + secondImageGrey.g + secondImageGrey.b) / 3.0

	//threshold on sin time
	timeForSin := Time * HalfPi/Duration
	if Direction != 1 {
		timeForSin += (HalfPi+Time) * HalfPi/Duration
	}
	thresh := sin(timeForSin)*0.5 + 0.5
    thresh2 := sin(timeForSin+0.1)*0.5 + 0.5
    thresh3 := sin(timeForSin-0.1)*0.5 + 0.5
    
    if grey > thresh3 {
		fragColor.r = 0.0
		fragColor.g = 1.0
		fragColor.b = 0.0
    }    
    
    if grey > thresh2 {
		fragColor.r = 0.0
		fragColor.g = 1.0
		fragColor.b = 1.0
    }
    
    if grey > thresh {
		fragColor.r = 0.0
        fragColor.g = 0.0
        fragColor.b = 0.0
    }

	return fragColor
}
