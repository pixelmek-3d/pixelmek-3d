// A Kage port of https://www.shadertoy.com/view/MdlcW8

//kage:unit pixels
package main

const Pi = 3.14159265
const HalfPi = Pi/2

var Direction float
var Duration float
var Time float
var ScreenSize vec2

func Fragment(dst vec4, src vec2, color vec4) vec4 {
	fragColor := imageSrc0UnsafeAt(src)
	if Direction == 0 {
		return fragColor
	}

	// k from 0 to 1
	timeForSin := Time * HalfPi/Duration
	if Direction != 1 {
		timeForSin += (HalfPi+Time) * HalfPi/Duration
	}
	k := (1.0 + sin(timeForSin)) / 2.0

	origin, size := imageSrcRegionOnTexture()
	uv := (src - origin) / size
	ruv := uv - vec2(0.5, 0.5)

	uv = ruv / (k + k * (1.0 - k) * sin((1.0 + uv.x) * (1.0 + uv.y) * 100.0*atan(uv))) + vec2(0.5, 0.5)

	if (uv.x > 1.0 || uv.y > 1.0 || uv.x < 0.0 || uv.y < 0.0) {
		fragColor = vec4(0, 0, 0, 0)
	}

	return fragColor
}
